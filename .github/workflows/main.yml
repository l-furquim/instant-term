name: Deploy to dev

on: 
  pull_request:
      branches: ["main"]

permissions:
  id-token: write
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      destroy: ${{ steps.set.outputs.destroy }}
    steps:
      - name: Set destroy variable
        id: set
        run: echo "destroy=true" >> $GITHUB_OUTPUT

  terraform:
    needs: prepare
    uses: ./.github/workflows/terraform.yml
    with:
      environment: prod 
      aws-region: "us-east-1"
      destroy: ${{ needs.prepare.outputs.destroy }}
    secrets:
      AWS_ASSUME_ROLE_ARN: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
      AWS_STATE_S3_BUCKET: ${{ secrets.AWS_STATE_S3_BUCKET }}
      AWS_LOCK_DYNAMODB_TABLE: ${{ secrets.AWS_LOCK_DYNAMODB_TABLE }}

  ecs-build-deploy:
    needs: [prepare, terraform]
    if: ${{ needs.prepare.outputs.destroy == 'false' }}
    uses: ./.github/workflows/ecs.yml
    with:
      environment: dev
      aws-region: "us-east-1"
      cluster-name: ${{ needs.terraform.outputs.cluster_name }}
      cli-task-arn: ${{ needs.terraform.outputs.cli_task_def_arn }}
      server-task-arn: ${{ needs.terraform.outputs.server_task_def_arn }}
    secrets:
      AWS_ASSUME_ROLE_ARN: ${{ secrets.AWS_ASSUME_ROLE_ARN }}

